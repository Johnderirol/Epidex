{% extends 'base.html.twig' %}

{% block body %}
<div class="container">
    <h1>Secteur : 
    {% for secteur in secteurs %}
        {{secteur.title}}
    </h1>
    <h3> 
    {% for rayons in secteur.rayons %}
    <a href="{{ path('manager_eval_rayon',{'id':rayons.id})}}">
        {{rayons.title}}    
    </a>
    {% endfor %}
    </h3>
    {% endfor %} 

    <br>
        <div class="panel panel-default">
            <div class="panel-heading">Cartographie détaillée du secteur</div>
            <div class="panel-body">
            {% for cat in categories %}
                <h4><center><span class="label label-success"> Compétences {{cat.title}}</span></center></h4>
                <div class="panel-body">
                    <canvas id="{{cat.slug}}.rayon" class="chartjs"></canvas>
                </div>
            {% endfor %}
            </div>
        </div>
</div>
{% endblock body %}
{% block javascripts %}
{% for cat in categories %}
<script>

var ctx = document.getElementById('{{cat.slug}}.rayon').getContext('2d');

var data = {
        labels:
        [
        {% for skill in skillSecteur %}
            {% if skill.competence.category.slug == cat.slug %}
            "{{skill.competence.title}}",
            {% endif %}
        {% endfor %}
        ],

        datasets:[
        {
            label:"{{cat.title}}",
            data:
            [
            {% for skill in skillSecteur %}
                {% if skill.competence.category.slug == cat.slug %}
                "{{skill.note}}",
                {% endif %}
            {% endfor %}
            ],
            fill:true,
            backgroundColor:"rgba(255, 99, 132, 0.2)",
            borderColor:"rgb(255, 99, 132)",
            pointBackgroundColor:"rgb(255, 99, 132)",
            pointBorderColor:"#fff",
            pointHoverBackgroundColor:"#fff",
            pointHoverBorderColor:"rgb(255, 99, 132)",
            
        },
        {% for rayon in rayons %}
        {
            label:
            "{{rayon.title}}",
            data:
            [
            {% for key, ray in compSecteur %}
            {% if key == rayon.id %}
                {% for comp in ray %}
                    {% if comp.competence.category.slug == cat.slug %}
                            {% if comp.note is defined %}
                                {% if comp.proprioID == key %}
                                        "{{comp.note}}",
                                {% endif %}
                            {% else %}
                            NaN,
                            {% endif %}
                    {% endif %}
                {% endfor %}
            {% endif %}
            {% endfor %}
            ],
            fill:true,
            backgroundColor:"rgba({{rayon.color.code}}, 0.2)",
            borderColor:"{{rayon.color.name}}",
            pointBackgroundColor:"{{rayon.color.name}}",
            pointBorderColor:"#fff",
            pointHoverBackgroundColor:"#fff",
            pointHoverBorderColor:"{{rayon.color.name}}",

        },
        {% endfor %}
        ]};

var options = {
    spanGaps: true,
    scale: {
    angleLines: {
        display: true
    },
    ticks: {
        suggestedMin: 0,
        suggestedMax: 4
    }
}
};

var config =  {
            type:'radar',
            data: data, 
            options : options
        }
        var graph = new Chart (ctx, config)


</script>
{% endfor %}
{%  endblock %}